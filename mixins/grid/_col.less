.set-columns(@set_size : @default_columns, @set_length : @set_size, @set_row:flex){
    
    @columns_set_size : @set_size;
    @columns_set_length : @set_length;
    @set_col : @set_row;

    .col(
        @value_1-1 : @false, @value_2-1 : @false,
        @value_1-2 : @false, @value_2-2 : @false,
        @value_1-3 : @false, @value_2-3 : @false,
        @value_1-4 : @false, @value_2-4 : @false,
        @value_1-5 : @false, @value_2-5 : @false,
        @value_1-6 : @false, @value_2-6 : @false,
        @value_1-7 : @false, @value_2-7 : @false,
        @value_1-8 : @false, @value_2-8 : @false,
        @value_1-9 : @false, @value_2-9 : @false,
        @value_1-10: @false, @value_2-10: @false,
        @value_1-11: @false, @value_2-11: @false,
        @value_1-12: @false, @value_2-12: @false
    ){
        .ww(break-word);
        .bz(border-box);
        .col-gap(1);
        & when (@set_col = inline-block),(@set_col = inline-flex),(@set_col = inline-grid),(@set_col = inline){
            .col-ib(){
                display: @set_col;
                vertical-align: top;
            }
            .col-ib();
        }

        & when (@set_col = left) , (@set_col = right){
            .col-float(){
                float: @set_col;
            }
            .col-float();
        }

        // * init size column * //
        .col-sz(@column_size : @columns_set_size){
            & when (@column_size > @columns_set_length){
                console-error("Incorrect number of columns - maximum @{columns_set_length}")
            }
            & when not (@set_col = grid) {
                @width_without_offset: 100% / @columns_set_length * @column_size;
                width:~"calc(@{width_without_offset} - @{offset})";
            }
        }
        ._mixin-col(
            @value_1-1  : @false, @value_2-1  : @false,
            @value_1-2  : @false, @value_2-2  : @false,
            @value_1-3  : @false, @value_2-3  : @false,
            @value_1-4  : @false, @value_2-4  : @false,
            @value_1-5  : @false, @value_2-5  : @false,
            @value_1-6  : @false, @value_2-6  : @false,
            @value_1-7  : @false, @value_2-7  : @false,
            @value_1-8  : @false, @value_2-8  : @false,
            @value_1-9  : @false, @value_2-9  : @false,
            @value_1-10 : @false, @value_2-10 : @false,
            @value_1-11 : @false, @value_2-11 : @false,
            @value_1-12 : @false, @value_2-12 : @false
        ){
            & when not (@value_1-1 = @false){
                & when(includes(@breaks, @value_1-1) = 0){
                    & when not (@value_2-1 = @false){
                        .break( .col-sz(@value_1-1) , 0 , @breaks[@@value_2-1] );
                        & when not (@value_1-2 = @false) {
                            ._mixin-col(
                                @value_2-1,  @value_1-2, 
                                @value_2-2,  @value_1-3,
                                @value_2-3,  @value_1-4,
                                @value_2-4,  @value_1-5,
                                @value_2-5,  @value_1-6,
                                @value_2-6,  @value_1-6,
                                @value_2-7,  @value_1-7,
                                @value_2-8,  @value_1-8,
                                @value_2-9,  @value_1-9,
                                @value_2-10, @value_1-10,
                                @value_2-11, @value_1-11,
                                @value_2-12
                            );
                        }
                    }
                    & when ( @value_2-1 = @false ) {
                        .col-sz( @value_1-1 );
                    }
                }
            
                & when (includes(@breaks, @value_1-1) = 1){
                    & when not(@value_1-2 = @false){
                        .break( .col-sz(@value_2-1) , @breaks[@@value_1-1], @breaks[@@value_1-2] );
                        & when not (@value_2-2 = @false){
                            ._mixin-col(
                                @value_1-2,  @value_2-2, 
                                @value_1-3,  @value_2-3,
                                @value_1-4,  @value_2-4,
                                @value_1-5,  @value_2-5,
                                @value_1-6,  @value_2-6,
                                @value_1-7,  @value_2-7, 
                                @value_1-8,  @value_2-8,
                                @value_1-9,  @value_2-9,
                                @value_1-10, @value_2-10,
                                @value_1-11, @value_2-11,
                                @value_1-12, @value_2-12
                            );
                        }
                    }
                    & when (@value_1-2 = @false){
                        .break( .col-sz(@value_2-1) , @breaks[@@value_1-1])
                    }
                }
            }    
        }
    
        ._mixin-col(
            @value_1-1, @value_2-1,
            @value_1-2, @value_2-2,
            @value_1-3, @value_2-3,
            @value_1-4, @value_2-4,
            @value_1-5, @value_2-5,
            @value_1-6, @value_2-6,
            @value_1-7, @value_2-7,
            @value_1-8, @value_2-8,
            @value_1-9, @value_2-9,
            @value_1-10, @value_2-10,
            @value_1-11, @value_2-11,
            @value_1-12, @value_2-12
        );
        // * end init size column * //
    }
}